# -*- coding: utf-8 -*-
"""Materi-10-Metode-Regresi-Linear-Contoh3_Syafrudin Fahrul Anas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RM8ux5p9ebqw4zgWmB6mDiM12A7si7jx
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split

# Membuat dataset (hanya nilai positif untuk x)
np.random.seed(0)
X = np.linspace(0, 6, 100).reshape(-1, 1)
Y = 2 * X**2 + 3 * X + 5 + np.random.randn(100, 1) * 3

# Membagi dataset menjadi data latih dan uji
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# Membuat model regresi linear
linear_model = LinearRegression()
linear_model.fit(X_train, Y_train)

# Membuat model regresi polinomial derajat 2
poly_features_2 = PolynomialFeatures(degree=2)
X_poly_train_2 = poly_features_2.fit_transform(X_train)
poly_model_2 = LinearRegression()
poly_model_2.fit(X_poly_train_2, Y_train)

# Membuat prediksi untuk keseluruhan dataset
X_sorted = np.sort(X, axis=0) # Urutkan X untuk membuat plot mulus
Y_pred_linear_all= linear_model.predict(X_sorted)
Y_pred_poly_2_all = poly_model_2.predict(poly_features_2.transform(X_sorted))

# Evaluasi model
mse_linear = mean_squared_error(Y_test, linear_model.predict(X_test))
mse_poly_2 = mean_squared_error(Y_test, poly_model_2.predict(poly_features_2.transform(X_test)))

print(f"MSE Squared Error (Linear): {mse_linear:.2f}")
print(f"MSE Squared Error (Polynomial Degree 2): {mse_poly_2:.2f}")

# Plot hasil regresi untuk seluruh dataset
plt.figure(figsize=(10, 6))
plt.scatter(X_train, Y_train, color='blue', label='Data Latih') # Data latih
plt.scatter(X_test, Y_test, color='orange', label='Data Uji') # Data uji
plt.plot(X_sorted, Y_pred_linear_all, color='red', label='Regresi Linear') # Garis regresi linear
plt.plot(X_sorted, Y_pred_poly_2_all, color='green', label='Regresi Polinomial Degree 2') # Garis regresi polinomial degree 2
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Regresi Linear dan Polinomial Degree 2 (Data Latih & Uji)')
plt.legend()
plt.show()